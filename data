try:
    # Check if files exist
    if not os.path.exists(excel1_path) or not os.path.exists(excel2_path):
        raise FileNotFoundError("One or both Excel files are missing!")

    # Load existing Excel1 file
    sheet1_df = pd.read_excel(excel1_path, sheet_name=sheet_name, dtype=str)
    
    # Load Excel2 file
    df2 = pd.read_excel(excel2_path, sheet_name=sheet_name, dtype=str)

    # Ensure all required columns exist
    required_columns = set(columns_to_compare + [status_column])
    if not required_columns.issubset(set(sheet1_df.columns)) or not required_columns.issubset(set(df2.columns)):
        raise ValueError("Missing required columns in either df1 or df2")

    # Assign occurrence numbers
    sheet1_df['occurrence'] = sheet1_df.groupby(columns_to_compare).cumcount() + 1
    df2['occurrence'] = df2.groupby(columns_to_compare).cumcount() + 1

    # Merge DataFrames
    merged_df = sheet1_df.merge(df2, on=columns_to_compare + ['occurrence'], how="outer", suffixes=("_df1", "_df2"), indicator=True)

    # Drop unnecessary columns
    merged_df.drop(columns=["_merge"], inplace=True, errors="ignore")

    # Update existing rows in sheet1
    sheet1_updated = sheet1_df.merge(
        merged_df[[*columns_to_compare, "occurrence", new_status_column]],
        on=[*columns_to_compare, "occurrence"],
        how="left"
    )

    # Replace original status column with updated new_status
    sheet1_updated[status_column] = sheet1_updated[new_status_column]
    sheet1_updated.drop(columns=[new_status_column], inplace=True)

    # Extract and append "New Party Incorrect" rows
    new_party_rows = merged_df[merged_df[new_status_column] == STATUS_NEW_PARTY].drop(columns=["status_df1"], errors="ignore")
    sheet1_final = pd.concat([sheet1_updated, new_party_rows], ignore_index=True)

    # Generate summary
    summary_df = generate_summary(merged_df, comment_groups)
    summary_sheet_name = f"Summary_{datetime.now().strftime('%Y%m%d_%H%M%S')}"

    # Save updated sheet1 back to Excel
    sheet1_final.to_excel(output_path, sheet_name=sheet_name, index=False, mode='a', if_sheet_exists='replace')

    # Save summary sheet
    summary_df.to_excel(output_path, sheet_name=summary_sheet_name, index=False, mode='a', if_sheet_exists='replace')

    print("✅ Excel updated successfully!")

except FileNotFoundError as e:
    print(f"❌ Error: {e}")

except ValueError as e:
    print(f"❌ Error: {e}")

except Exception as e:
    print(f"❌ An unexpected error occurred: {e}")
