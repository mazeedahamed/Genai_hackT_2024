# Count occurrences per unique transaction in both DataFrames
    df1_occurrences = df1.groupby(columns_to_compare).size().reset_index(name="df1_count")
    df2_occurrences = df2.groupby(columns_to_compare).size().reset_index(name="df2_count")
    
    # Merge occurrence counts into merged_df
    merged_df = merged_df.merge(df1_occurrences, on=columns_to_compare, how="left")
    merged_df = merged_df.merge(df2_occurrences, on=columns_to_compare, how="left")

    merged_df["df1_count"].fillna(0, inplace=True)
    merged_df["df2_count"].fillna(0, inplace=True)

    # Assign status based on merging result and occurrence counts
    def assign_status(row):
        if row["_merge"] == "left_only":
            if row["df1_count"] > row["df2_count"]:
                return "missing" if row["status_df1"] in ["correct", "incomplete"] else "valid drop"
        elif row["_merge"] == "right_only":
            return "new incorrect"
        return row[new_status_column]

    merged_df[new_status_column] = merged_df.apply(assign_status, axis=1)

    # Drop helper columns
    merged_df.drop(columns=["_merge", "df1_count", "df2_count"], inplace=True, errors="ignore")
    
    return merged_df
