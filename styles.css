def generate_account_level_view(df1, df2):
    # Normalize columns and string values
    df1.columns = df1.columns.str.lower()
    df1 = df1.applymap(lambda x: x.lower() if isinstance(x, str) else x)

    df2.columns = df2.columns.str.lower()
    df2 = df2.applymap(lambda x: x.lower() if isinstance(x, str) else x)
    df2['account_no'] = df2['group_no'].apply(lambda x: '-'.join(x.split('-')[:3]))

    # --- df1: Group and explode statuses ---
    df1_grouped = df1.groupby('account_no')['grouped party status_gt'].agg(list).explode().reset_index()
    df1_counts = pd.crosstab(df1_grouped['account_no'], df1_grouped['grouped party status_gt'])
    df1_counts.columns = [f'df1_{col}' for col in df1_counts.columns]
    df1_counts = df1_counts.reset_index()

    # --- df2: Group and explode statuses ---
    df2_grouped = df2.groupby('account_no')['new_status'].agg(list).explode().reset_index()
    df2_counts = pd.crosstab(df2_grouped['account_no'], df2_grouped['new_status'])
    df2_counts.columns = [f'df2_{col}' for col in df2_counts.columns]
    df2_counts = df2_counts.reset_index()

    # --- Merge both summaries ---
    merged = pd.merge(df1_counts, df2_counts, on='account_no', how='outer').fillna(0)

    # Ensure all values are int
    for col in merged.columns:
        if col != 'account_no':
            merged[col] = merged[col].astype(int)

    return merged
