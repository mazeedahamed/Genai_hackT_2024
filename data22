import pandas as pd

def update_excel(excel_path, extracted_data, sheet_name):
    # Read the Excel sheet and normalize data
    df = pd.read_excel(excel_path, sheet_name=sheet_name)
    df = df.astype(str).apply(lambda x: x.str.strip().str.lower())

    status_col = "iteration_status"

    # Create status_col if it doesn't exist
    if status_col not in df.columns:
        df[status_col] = None

    for data in extracted_data:
        match_condition = (
            (df['type'] == str(data['type']).strip().lower()) &
            (df['name'] == str(data['name']).strip().lower()) &
            (df['country'] == str(data['country']).strip().lower())
        )

        matched_rows = df.loc[match_condition]

        if not matched_rows.empty:
            # Check if there is any matched row with empty or NaN status_col
            if ((matched_rows[status_col].isna()) | (matched_rows[status_col] == '')).any():
                # Update only rows with empty status to 'match'
                df.loc[match_condition & ((df[status_col].isna()) | (df[status_col] == '')), status_col] = 'match'
            else:
                # If all matched rows already have a non-empty status, add a new row with 'duplicate'
                new_row = {
                    "type": data["type"],
                    "name": data["name"],
                    "country": data["country"],
                    "dob": data.get("dob", ""),
                    "nationality": data.get("nationality", ""),
                    "gender": data.get("gender", ""),
                    status_col: "duplicate",
                    "values": str(data)
                }
                df = pd.concat([df, pd.DataFrame([new_row])], ignore_index=True)
        else:
            # No match found, add a new row with 'additional' status
            new_row = {
                "type": data["type"],
                "name": data["name"],
                "country": data["country"],
                "dob": data.get("dob", ""),
                "nationality": data.get("nationality", ""),
                "gender": data.get("gender", ""),
                status_col: "additional",
                "values": str(data)
            }
            df = pd.concat([df, pd.DataFrame([new_row])], ignore_index=True)

    # Save the updated DataFrame back to Excel
    df.to_excel(excel_path, sheet_name=sheet_name, index=False)
    print("Excel updated successfully.")
