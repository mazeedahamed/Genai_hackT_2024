import requests
import time

def call_api_with_retries(api_url, id_list, headers):
    extracted_data = []
    
    for id_value in id_list:
        payload = {"id": id_value}  # Modify as per actual payload structure
        attempts = 0
        
        while attempts < 3:
            response = requests.post(api_url, json=payload, headers=headers)
            
            if response.status_code == 200:
                response_data = response.json()
                
                # Parallel conditions check
                if "parties" in response_data and isinstance(response_data["parties"], list) and len(response_data["parties"]) > 0:
                    for party in response_data["parties"]:
                        extracted_data.append({
                            "type": party.get("type"),
                            "name": party.get("fullName", party.get("firstName")),
                            "country": party.get("country")
                        })
                    break  # Exit retry loop on success
                else:
                    print(f"Invalid response format for ID {id_value}: Missing or empty 'parties' list")
            
            else:
                print(f"Attempt {attempts + 1}: API call failed for ID {id_value} with status {response.status_code}")
                attempts += 1
                time.sleep(2)  # Wait before retrying
        
        if attempts == 3:
            print(f"API request failed after retries for ID {id_value}. Last status code: {response.status_code}")
    
    print("Final Extracted Data:", extracted_data)
    return extracted_data

# Example usage
api_url = "https://example.com/api"  # Replace with actual API URL
id_list = [101, 102, 103]  # Replace with actual list of IDs
headers = {"Authorization": "Bearer token"}  # Modify headers as needed

call_api_with_retries(api_url, id_list, headers)
